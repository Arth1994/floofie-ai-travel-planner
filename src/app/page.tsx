'use client'

import React, { useState, useEffect } from 'react'
import { type TravelFormData } from '../lib/validation'
import { useAuth } from '../contexts/AuthContext'
import { AuthButton } from '../components/AuthButton'
import { Logo } from '../components/Logo'
import { TravelForm } from '../components/forms/TravelForm'
import { ItineraryDisplay } from '../components/itinerary/ItineraryDisplay'
import { FlightSearch } from '../components/flights/FlightSearch'
import { SessionWarning } from '../components/SessionWarning'
import { ItinerarySaveLoad } from '../components/ItinerarySaveLoad'
import { useItineraryGenerator } from '../hooks/useItineraryGenerator'
import { useSessionManager } from '../hooks/useSessionManager'

export default function HomePage() {
  const [formData, setFormData] = useState<TravelFormData>({
    destination: '',
    duration: 3,
    theme: 'Spa & Wellness',
    budget: 1200,
    dietary: 'Any'
  })
  // Initialize authentication, session management, and itinerary generation
  const { user, loading } = useAuth()
  const {
    generateItinerary,
    isLoading,
    result,
    errors,
    securityMessage,
    setErrors,
    setSecurityMessage
  } = useItineraryGenerator()
  
  // Session management
  const {
    isSessionActive,
    timeRemaining,
    extendSession,
    resetSession,
    warningShown
  } = useSessionManager()

  // Session expired handler
  const handleSessionExpired = () => {
    window.location.reload()
  }

  // Handle loading saved itinerary
  const handleLoadItinerary = (itinerary: any, loadedFormData: TravelFormData) => {
    setFormData(loadedFormData)
    // Set the result to trigger display
    if (generateItinerary) {
      // We can't directly set the result, but we can trigger regeneration
      // For now, just update the form data - the user can regenerate
      console.log('Loaded itinerary:', itinerary)
    }
  }

  // Google Docs and Calendar integration functions
  const createGoogleDocs = (itinerary: any) => {
    const docTitle = `${itinerary.destination} - ${itinerary.theme} Trip Itinerary`
    const docContent = `# 🐼 Floofie Funventures - ${itinerary.theme} Trip to ${itinerary.destination}

## 📋 Trip Overview
- **Destination**: ${itinerary.destination}
- **Duration**: ${itinerary.duration} days
- **Theme**: ${itinerary.theme}
- **Budget**: $${itinerary.budget}
- **Daily Budget**: $${Math.floor(itinerary.budget / itinerary.duration)}

---

## 📅 Detailed Itinerary

${itinerary.days.map((day: any, index: number) => `
### Day ${day.day}

#### 🌅 Morning (${day.morning.time})
**${day.morning.name}**
- Type: ${day.morning.type}
- Cost: ${day.morning.cost}
- Rating: ⭐ ${day.morning.rating}
- Address: ${day.morning.address}
- [📍 View on Maps](${day.morning.mapsUrl})
- [🎫 Book Now](${day.morning.bookingUrl})

#### ☀️ Afternoon (${day.afternoon.time})
**${day.afternoon.name}**
- Type: ${day.afternoon.type}
- Cost: ${day.afternoon.cost}
- Rating: ⭐ ${day.afternoon.rating}
- Address: ${day.afternoon.address}
- [📍 View on Maps](${day.afternoon.mapsUrl})
- [🎫 Book Now](${day.afternoon.bookingUrl})

#### 🌙 Evening (${day.evening.time})
**${day.evening.name}**
- Type: ${day.evening.type}
- Cost: ${day.evening.cost}
- Rating: ⭐ ${day.evening.rating}
- Address: ${day.evening.address}
- [📍 View on Maps](${day.evening.mapsUrl})
- [🎫 Book Now](${day.evening.bookingUrl})

#### 🍽️ Dining
🎋 **Breakfast**: ${day.dining.breakfast.name} (${day.dining.breakfast.price}) - ⭐ ${day.dining.breakfast.rating}
🎋 **Lunch**: ${day.dining.lunch.name} (${day.dining.lunch.price}) - ⭐ ${day.dining.lunch.rating}
🎋 **Dinner**: ${day.dining.dinner.name} (${day.dining.dinner.price}) - ⭐ ${day.dining.dinner.rating}

#### 🏨 Accommodation
**${day.accommodation.name}**
- Type: ${day.accommodation.type}
- Price: ${day.accommodation.price}
- Rating: ⭐ ${day.accommodation.rating}
- [📍 View Location](${day.accommodation.mapsUrl})
- [🏨 Book Hotel](${day.accommodation.bookingUrl})

---
`).join('\n')}

## 💰 Budget Summary
- **Total Budget**: $${itinerary.budget}
- **Daily Average**: $${Math.floor(itinerary.budget / itinerary.duration)}

---

*Generated by Floofie Funventures 🐼*  
*Plan your next adventure at floofie-travels.web.app*  
🐾`

    const googleDocsUrl = `https://docs.google.com/document/create?title=${encodeURIComponent(docTitle)}`
    
    // Open Google Docs and then try to populate it (this is a simplified approach)
    const newWindow = window.open(googleDocsUrl, '_blank')
    
    // Note: We can't directly populate Google Docs via URL parameters
    // In a real implementation, you'd use Google Docs API
    alert(`Google Docs opened! Copy this itinerary to your new document:\n\n${docContent.substring(0, 500)}...`)
  }

  const addToGoogleCalendar = (itinerary: any) => {
    const startDate = new Date()
    startDate.setDate(startDate.getDate() + 1) // Start tomorrow
    
    const endDate = new Date(startDate)
    endDate.setDate(endDate.getDate() + itinerary.duration - 1)
    
    // Create main trip event
    const tripTitle = `${itinerary.destination} - ${itinerary.theme} Trip`
    const tripDetails = `🎯 ${itinerary.theme} adventure in ${itinerary.destination}
💰 Budget: $${itinerary.budget}
📅 Duration: ${itinerary.duration} days

${itinerary.days.map((day: any, index: number) => `
📅 Day ${day.day}:
🌅 Morning: ${day.morning.name} (${day.morning.cost})
☀️ Afternoon: ${day.afternoon.name} (${day.afternoon.cost})
🌙 Evening: ${day.evening.name} (${day.evening.cost})

🍽️ Dining:
🎋 Breakfast: ${day.dining.breakfast.name}
🎋 Lunch: ${day.dining.lunch.name}
🎋 Dinner: ${day.dining.dinner.name}

🏨 Stay: ${day.accommodation.name} (${day.accommodation.price})
`).join('\n')}

Generated by Floofie Funventures 🐼
Plan your next adventure at floofie-travels.web.app`

    const googleCalendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(tripTitle)}&dates=${startDate.toISOString().replace(/[-:]/g, '').split('.')[0]}Z/${endDate.toISOString().replace(/[-:]/g, '').split('.')[0]}Z&details=${encodeURIComponent(tripDetails)}&location=${encodeURIComponent(itinerary.destination)}`
    
    window.open(googleCalendarUrl, '_blank')
  }

  const handleSubmit = async () => {
    await generateItinerary(formData)
  }

  if (loading) {
  return (
      <main className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-lg text-slate-600">Loading Floofie Funventures...</p>
        </div>
      </main>
    )
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 relative overflow-hidden">
      {/* Paw Decorations */}
      <div className="absolute top-20 left-10 text-6xl opacity-20 animate-bounce" style={{ animationDelay: '0s' }}>🐾</div>
      <div className="absolute top-40 right-20 text-4xl opacity-15 animate-bounce" style={{ animationDelay: '1s' }}>🐾</div>
      <div className="absolute bottom-40 left-20 text-5xl opacity-20 animate-bounce" style={{ animationDelay: '2s' }}>🐾</div>
      <div className="absolute bottom-20 right-10 text-3xl opacity-15 animate-bounce" style={{ animationDelay: '0.5s' }}>🐾</div>
      <div className="absolute top-60 left-1/3 text-4xl opacity-10 animate-bounce" style={{ animationDelay: '1.5s' }}>🐾</div>
      <div className="absolute bottom-60 right-1/3 text-5xl opacity-15 animate-bounce" style={{ animationDelay: '2.5s' }}>🐾</div>

      <header className="bg-gradient-to-r from-white/90 via-blue-50/80 to-indigo-50/90 backdrop-blur-md border-b border-blue-200/50 sticky top-0 z-40 shadow-lg">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
          <div className="flex items-center gap-3">
            <Logo size="md" />
            <h1 className="text-xl font-bold text-slate-800 tracking-tight">Floofie Funventures</h1>
          </div>
          <AuthButton />
        </div>
      </header>

      {/* Main Content */}
      <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="text-center mb-12">
          <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-slate-800 mb-6 tracking-tight">
            🐼 Floofie Funventures 🐼
          </h1>
          <p className="text-xl sm:text-2xl text-slate-600 max-w-3xl mx-auto leading-relaxed font-medium">
            Your cute and loving panda travel companion that creates personalized itineraries 🐾
          </p>
        </div>

        {/* Authentication and Authorization Notices */}
        {!user && (
          <div className="bg-amber-50 border border-amber-200 rounded-2xl p-6 mb-8">
            <div className="flex items-center gap-3">
              <svg className="w-6 h-6 text-amber-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
              </svg>
              <p className="text-amber-800 font-semibold">Please sign in to create your travel itinerary</p>
            </div>
          </div>
        )}


        {/* Form */}
        <TravelForm
          formData={formData}
          onFormDataChange={setFormData}
          onSubmit={handleSubmit}
          isLoading={isLoading}
          user={user}
        />

        {/* Error Display */}
        {errors.length > 0 && (
          <div className="bg-red-50 border border-red-200 rounded-2xl p-6 mb-8">
            <div className="flex items-center gap-3 mb-3">
              <svg className="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <h3 className="text-red-800 font-bold text-lg">Please fix the following errors:</h3>
            </div>
            <ul className="list-disc list-inside space-y-1">
              {errors.map((error, index) => (
                <li key={index} className="text-red-700">{error}</li>
              ))}
            </ul>
          </div>
        )}

        {/* Security Message */}
        {securityMessage && (
          <div className={`rounded-2xl p-4 mb-8 ${
            securityMessage.includes('✅') 
              ? 'bg-green-50 border border-green-200 text-green-800' 
              : 'bg-amber-50 border border-amber-200 text-amber-800'
          }`}>
            <div className="flex items-center gap-2">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span className="font-medium">{securityMessage}</span>
            </div>
          </div>
        )}

         {/* Result */}
         <ItineraryDisplay
           result={result}
           onCreateGoogleDocs={createGoogleDocs}
           onAddToGoogleCalendar={addToGoogleCalendar}
         />

         {/* Flight Search */}
        {result && (
          <FlightSearch
            destination={result.destination}
            departureDate={new Date().toISOString().split('T')[0]}
            returnDate={new Date(Date.now() + result.duration * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}
          />
        )}

        {/* Save/Load Itineraries */}
        <ItinerarySaveLoad
          user={user}
          currentItinerary={result}
          formData={formData}
          onLoadItinerary={handleLoadItinerary}
        />


        {/* Floofie's Suite of Tools Section */}
        <div className="mt-20">
          <div className="text-center mb-12">
            <h2 className="text-3xl sm:text-4xl font-bold text-slate-800 mb-4">
              🐼 Floofie's Funventures Suite
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto">
              A complete toolkit for all your travel and adventure needs
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {/* Travel Planner - Current Tool */}
            <div className="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-2xl border-2 border-blue-200 shadow-lg p-6 text-center hover:shadow-xl transition-all duration-300 transform hover:scale-105">
              <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-4 shadow-md">
                <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
              </div>
              <h3 className="text-lg font-bold text-slate-800 mb-2">Travel Planner</h3>
              <p className="text-sm text-slate-600 mb-3">AI-powered itinerary creation</p>
              <span className="inline-block bg-blue-100 text-blue-800 text-xs font-semibold px-3 py-1 rounded-full">
                Available Now
              </span>
            </div>

            {/* Budget Tracker - Coming Soon */}
            <div className="bg-gradient-to-br from-emerald-50 to-green-100 rounded-2xl border border-emerald-200 shadow-lg p-6 text-center hover:shadow-lg transition-all duration-300 opacity-75">
              <div className="w-12 h-12 bg-gradient-to-r from-emerald-500 to-emerald-600 rounded-xl flex items-center justify-center mx-auto mb-4 shadow-md">
                <span className="text-white text-lg font-bold">💰</span>
              </div>
              <h3 className="text-lg font-bold text-slate-800 mb-2">Budget Tracker</h3>
              <p className="text-sm text-slate-600 mb-3">Smart expense management</p>
              <span className="inline-block bg-emerald-100 text-emerald-800 text-xs font-semibold px-3 py-1 rounded-full">
                Coming Soon
              </span>
            </div>

            {/* Travel Journal - Coming Soon */}
            <div className="bg-gradient-to-br from-purple-50 to-pink-100 rounded-2xl border border-purple-200 shadow-lg p-6 text-center hover:shadow-lg transition-all duration-300 opacity-75">
              <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mx-auto mb-4 shadow-md">
                <span className="text-white text-lg font-bold">📖</span>
              </div>
              <h3 className="text-lg font-bold text-slate-800 mb-2">Travel Journal</h3>
              <p className="text-sm text-slate-600 mb-3">Digital memory keeping</p>
              <span className="inline-block bg-purple-100 text-purple-800 text-xs font-semibold px-3 py-1 rounded-full">
                Coming Soon
              </span>
            </div>

            {/* Adventure Finder - Coming Soon */}
            <div className="bg-gradient-to-br from-orange-50 to-amber-100 rounded-2xl border border-orange-200 shadow-lg p-6 text-center hover:shadow-lg transition-all duration-300 opacity-75">
              <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mx-auto mb-4 shadow-md">
                <span className="text-white text-lg font-bold">🏔️</span>
              </div>
              <h3 className="text-lg font-bold text-slate-800 mb-2">Adventure Finder</h3>
              <p className="text-sm text-slate-600 mb-3">Discover new experiences</p>
              <span className="inline-block bg-orange-100 text-orange-800 text-xs font-semibold px-3 py-1 rounded-full">
                Coming Soon
              </span>
            </div>
          </div>

          <div className="text-center mt-8">
            <p className="text-slate-600 text-lg">
              More tools coming soon to make your adventures even more amazing! 🐾
            </p>
          </div>
        </div>
        
        {/* Cute Footer */}
        <footer className="text-center py-12 px-4 bg-white/80 rounded-2xl mx-4 border border-slate-200">
          <div className="flex flex-col items-center gap-2">
            <p className="text-lg text-slate-800 font-bold">
              <span className="bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">Made with love by Floofie the cute and loving panda</span> 🐼 ✨ 🐼
            </p>
            <p className="text-2xl">🐾</p>
          </div>
      </footer>
    </div>
       
       {/* Session Warning */}
       {user && (warningShown || !isSessionActive) && (
         <SessionWarning
           timeRemaining={timeRemaining}
           onExtendSession={extendSession}
           onSessionExpired={handleSessionExpired}
         />
       )}
     </main>
   )
}
